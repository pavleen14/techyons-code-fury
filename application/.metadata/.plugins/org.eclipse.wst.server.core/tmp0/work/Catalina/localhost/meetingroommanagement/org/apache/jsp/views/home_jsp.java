/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-09-26 17:07:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/meetingroommanagement/css/style.css\">\r\n");
      out.write("    <!-- <link rel=\"stylesheet\" href=\"all.css\"> -->\r\n");
      out.write("    <title>HSCC Meettings</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body id=\"page-container\">\r\n");
      out.write("    <header>\r\n");
      out.write("        <!-- Navbar -->\r\n");
      out.write("        <nav class=\"navbar navbar-expand-lg bg-dark\" style=\"height: 8vh\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <!-- Logo -->\r\n");
      out.write("                <img src=\"/meetingroommanagement/resources/images/logo.png\" height=\"30\" alt=\"\" />\r\n");
      out.write("                <h4 class=\"text-white ms-4 my-auto\">HMeets</h4>\r\n");
      out.write("                <!-- Logo -->\r\n");
      out.write("\r\n");
      out.write("                <!-- Menu button -->\r\n");
      out.write("                <button class=\"navbar-toggler\" type=\"button\" data-mdb-toggle=\"collapse\" data-mdb-target=\"#navbarButtons\" aria-controls=\"navbarButtons\" aria-expanded=\"true\" aria-label=\"Toggle navigation\">\r\n");
      out.write("                    <img src=\"/meetingroommanagement/resources/images/icon_menu.png\" height=\"22\" alt=\"\" class=\"me-1\" />\r\n");
      out.write("                </button>\r\n");
      out.write("                <!-- Menu button -->\r\n");
      out.write("\r\n");
      out.write("                <!-- Nav Items -->\r\n");
      out.write("                <div class=\"collapse navbar-collapse\" id=\"navbarButtons\">\r\n");
      out.write("                    <div class=\"me-auto\"></div>\r\n");
      out.write("                    <!-- <small class=\"text-info me-4\">Link</small> -->\r\n");
      out.write("                    <ul class=\"align-nav-item\">\r\n");
      out.write("                        <img src=\"/meetingroommanagement/resources/images/icon_user.png\" height=\"16\" alt=\"\" class=\"me-1\" />\r\n");
      out.write("                        <small class=\"text-white me-4\">Hi! User</small>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                    <ul class=\"align-nav-item\">\r\n");
      out.write("                        <a href=\"login\">\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-outline-info\" data-mdb-ripple-color=\"dark\">\r\n");
      out.write("                                Login\r\n");
      out.write("                            </button>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                    <!-- </div> -->\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- Nav Items -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("        <!-- Navbar -->\r\n");
      out.write("    </header>\r\n");
      out.write("    <main id=\"content-wrap\">\r\n");
      out.write("        <!-- Application Info -->\r\n");
      out.write("        <div class=\"row bg-dark\">\r\n");
      out.write("            <div class=\"col-md-5 text-center\" id=\"imgDiv\">\r\n");
      out.write("                <img src=\"/meetingroommanagement/resources/images/bg_home.png\" alt=\"\" id=\"homeImage\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-6 d-flex align-items-center justify-content-center px-3 text-white mb-5\">\r\n");
      out.write("                <h5 class=\"text-justify\">\r\n");
      out.write("                    No demo without Lorem ipsum text. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Provident tenetur delectus fuga et, doloribus rerum! Aperiam voluptate mollitia rerum necessitatibus repudiandae asperiores doloremque deleniti praesentium, dolorem\r\n");
      out.write("                    maxime, quia, libero. Maiores?\r\n");
      out.write("                </h5>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"row m-3\" id=\"roomdetails\">\r\n");
      out.write("            <div class=\"card-container col-xl-4 col-lg-6 col-md-6 col-sm-8\">\r\n");
      out.write("                <div class=\"import-user-card-body rounded-4 text-center\">\r\n");
      out.write("                    <img src=\"/meetingroommanagement/resources/images/icon_users.png\" height=\"40\" alt=\"\" class=\"mb-2\" />\r\n");
      out.write("                    <h5 class=\"import-card-title text-white space-around mb-2\">HSCC Users</h5>\r\n");
      out.write("                    <p class=\"card-text text-white space-around\">\r\n");
      out.write("                        Import all the users of your organization(if not already imported) before you proceed further.\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <button type=\"button\" class=\"btn bg-success\" onclick=\"importUsers()\" data-mdb-toggle=\"modal\" data-mdb-target=\"#importStatusModal\">Import Users</button>\r\n");
      out.write("                    <!-- data-mdb-toggle=\"modal\" data-mdb-target=\"#importStatusModal\" -->\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- Modal -->\r\n");
      out.write("        <div class=\"modal fade\" id=\"importStatusModal\" tabindex=\"-1\" aria-labelledby=\"statusModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("            <div class=\"modal-dialog\">\r\n");
      out.write("                <div class=\"modal-content\">\r\n");
      out.write("                    <div class=\"modal-header\">\r\n");
      out.write("                        <h5 class=\"modal-title\" id=\"statusModalLabel\">Import status</h5>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-body\">\r\n");
      out.write("                        <h6 id=\"importStatus\">Importing users...</h6>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-footer\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-outline-info\" data-mdb-dismiss=\"modal\">\r\n");
      out.write("                            Ok\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </main>\r\n");
      out.write("\r\n");
      out.write("    <!--Footer-->\r\n");
      out.write("    <footer id=\"footer\">\r\n");
      out.write("        <div>\r\n");
      out.write("            <hr class=\"my-2\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer-copyright d-flex align-items-center justify-content-center\">\r\n");
      out.write("            © 20meetingroom21 Copyright: HSCC Meettings\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <!--/.Footer-->\r\n");
      out.write("\r\n");
      out.write("    <!--scripts-->\r\n");
      out.write("    <script src=\"/meetingroommanagement/scripts/scripts.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        function importUsers() {\r\n");
      out.write("            let xhttp = new XMLHttpRequest();\r\n");
      out.write("            let method = \"POST\";\r\n");
      out.write("            let url = \"http://localhost:8080/meetingroommanagement/\";\r\n");
      out.write("            xhttp.open(method, url);\r\n");
      out.write("            xhttp.send();\r\n");
      out.write("\r\n");
      out.write("            xhttp.onload = function() {\r\n");
      out.write("                    let importStatus = xhttp.responseText;\r\n");
      out.write("                    let statusElement = document.getElementById('importStatus');\r\n");
      out.write("                    if (importStatus.includes(\"Successfully imported\")) {\r\n");
      out.write("                        statusElement.style.color = \"green\";\r\n");
      out.write("                    } else {\r\n");
      out.write("                        statusElement.style.color = \"red\";\r\n");
      out.write("                    }\r\n");
      out.write("                    statusElement.innerHTML = importStatus;\r\n");
      out.write("                }\r\n");
      out.write("                /*\r\n");
      out.write("setTimeout(function() {\r\n");
      out.write("    let importStatus = \"Successfully imported 11 users\"\r\n");
      out.write("    let statusElement = document.getElementById('importStatus');\r\n");
      out.write("    if (importStatus.includes(\"Successfully imported\")) {\r\n");
      out.write("        statusElement.style.color = \"green\";\r\n");
      out.write("    } else {\r\n");
      out.write("        statusElement.style.color = \"red\";\r\n");
      out.write("    }\r\n");
      out.write("    statusElement.innerHTML = importStatus;\r\n");
      out.write("}, 3000);\r\n");
      out.write("*/\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        window.onload = function() {\r\n");
      out.write("            getMeetingRooms();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // this list of json is only for testing purpose\r\n");
      out.write("        //let allRooms = [{\r\n");
      out.write("          //  \"Name\": \"Conference call wala room new hai\",\r\n");
      out.write("            //\"SeatingCapacity\": 23,\r\n");
      out.write("            //\"NumberOfMeetings\": 12,\r\n");
      out.write("            //\"Ratings\": 3\r\n");
      out.write("    //    }, {\r\n");
      out.write("      //      \"Name\": \"Online wala room\",\r\n");
      out.write("        //    \"SeatingCapacity\": 32,\r\n");
      out.write("          //  \"NumberOfMeetings\": 2,\r\n");
      out.write("   //         \"Ratings\": 5\r\n");
      out.write("     //   }, {\r\n");
      out.write("       //     \"Name\": \"Presentation wala room\",\r\n");
      out.write("   //         \"SeatingCapacity\": 45,\r\n");
      out.write("     //       \"NumberOfMeetings\": 53,\r\n");
      out.write("       //     \"Ratings\": 4\r\n");
      out.write("   //     }, {\r\n");
      out.write("     //       \"Name\": \"Training wala room\",\r\n");
      out.write("       //     \"SeatingCapacity\": 65,\r\n");
      out.write("   //         \"NumberOfMeetings\": 90,\r\n");
      out.write("     //       \"Ratings\": 4\r\n");
      out.write("       // }];\r\n");
      out.write("\r\n");
      out.write("        function getMeetingRooms() {\r\n");
      out.write("            // var roomsLoaded = false;\r\n");
      out.write("            var roomDiv = document.getElementById(\"roomdetails\");\r\n");
      out.write("            let xhttp = new XMLHttpRequest();\r\n");
      out.write("            let method = \"GET\";\r\n");
      out.write("            let url = \"http://localhost:8080/meetingroommanagement/room\"\r\n");
      out.write("            xhttp.open(method, url, true);\r\n");
      out.write("            xhttp.send();\r\n");
      out.write("\r\n");
      out.write("         //   if (!roomsLoaded) {\r\n");
      out.write("         //         showLoader();\r\n");
      out.write("         //   }\r\n");
      out.write("\r\n");
      out.write("            xhttp.onload = function() {\r\n");
      out.write("                let htmlStr = \"\"\r\n");
      out.write("                let allRooms = JSON.parse(xhttp.responseText);\r\n");
      out.write("                if (allRooms.length > 0) {\r\n");
      out.write("                    htmlStr = renderRoomsHtml(allRooms);\r\n");
      out.write("                    roomDiv.insertAdjacentHTML('beforeend', htmlStr);\r\n");
      out.write("                } else {\r\n");
      out.write("                    renderNoRoomsHtml();\r\n");
      out.write("                }\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // /* this list of json is only for testing purpose\r\n");
      out.write("            //if (allRooms.length > 0) {\r\n");
      out.write("            //    htmlStr = renderRoomsHtml(allRooms);\r\n");
      out.write("            //    roomDiv.insertAdjacentHTML('beforeend', htmlStr);\r\n");
      out.write("            //} else {\r\n");
      out.write("            //    renderNoRoomsHtml();\r\n");
      out.write("            //}\r\n");
      out.write("            // */\r\n");
      out.write("\r\n");
      out.write("            function renderRoomsHtml(allRooms) {\r\n");
      out.write("                let allRoomsHtml = \"\";\r\n");
      out.write("                allRooms.forEach(room => {\r\n");
      out.write("                    allRoomsHtml += `<div class=\"card-container col-xl-2 col-lg-3 col-md-3 col-sm-4\">\r\n");
      out.write("                                        <div class=\"card-body rounded-4\">\r\n");
      out.write("                                            <h5 class=\"card-title mb-4\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.Name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h5>\r\n");
      out.write("                                            <h6 class=\"card-subtitle text-black\">Seating Capacity</h6>\r\n");
      out.write("                                            <p class=\"text-muted\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.SeatingCapacity}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" participants</p>\r\n");
      out.write("                                            <h6 class=\"card-subtitle text-black\">Per hour cost</h6>\r\n");
      out.write("                                            <p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.perHourCost}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" Credits</p>\r\n");
      out.write("                                            <h6 class=\"card-subtitle text-black\">Rating: </h6>\r\n");
      out.write("                                            <p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.Ratings}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>`;\r\n");
      out.write("                });\r\n");
      out.write("                // hideLoader();\r\n");
      out.write("                return allRoomsHtml;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            function renderNoRoomsHtml() {\r\n");
      out.write("                let noRoomHtml = `<div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-4 d-flex align-items-center justify-content-center text-muted mt-4\">\r\n");
      out.write("                    <h5>No meeting rooms available.</h5>\r\n");
      out.write("                </div>`;\r\n");
      out.write("                // hideLoader();\r\n");
      out.write("                roomDiv.insertAdjacentHTML('beforeend', noRoomHtml);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // function showLoader() {\r\n");
      out.write("            //     let showLoaderHtml = `<div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-4 d-flex align-items-center justify-content-center text-muted mt-4\" id=\"loader\">\r\n");
      out.write("            //         <h5>Loading meeting rooms...</h5>\r\n");
      out.write("            //     </div>`;\r\n");
      out.write("            //     roomDiv.insertAdjacentHTML('beforeend', showLoaderHtml);\r\n");
      out.write("            // }\r\n");
      out.write("\r\n");
      out.write("            // function hideLoader() {\r\n");
      out.write("            //     roomsLoaded = true;\r\n");
      out.write("            //     document.getElementById('loader').style.display = \"none!important\";\r\n");
      out.write("            // }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    <!--scripts-->\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
